import { useEffect, useRef, useState } from "react";
import { View, Text, Dimensions } from "react-native";
import Animated, {
  useSharedValue,
  withTiming,
  Easing,
} from "react-native-reanimated";
import Svg, { Path } from "react-native-svg";
import tw from "tailwind-rn";
import AnimatedStroke from "./AnimatedStroke";
const MARGIN = 10;
const vWidth = 506 + MARGIN;
const vHeight = 152 + MARGIN;
const width = Dimensions.get("window").width - 64;
const height = (width * vHeight) / vWidth;
const paths = [
  "M81.7695 113.379C81.7695 107.129 79.556 102.311 75.1289 98.9258C70.7669 95.5404 62.8568 92.1224 51.3984 88.6719C39.9401 85.2214 30.8255 81.3802 24.0547 77.1484C11.099 69.0104 4.62109 58.3984 4.62109 45.3125C4.62109 33.8542 9.27604 24.4141 18.5859 16.9922C27.9609 9.57031 40.1029 5.85938 55.0117 5.85938C64.9076 5.85938 73.7292 7.68229 81.4766 11.3281C89.224 14.974 95.3112 20.1823 99.7383 26.9531C104.165 33.6589 106.379 41.1133 106.379 49.3164H81.7695C81.7695 41.8945 79.4258 36.1003 74.7383 31.9336C70.1159 27.7018 63.4753 25.5859 54.8164 25.5859C46.7435 25.5859 40.4609 27.3112 35.9688 30.7617C31.5417 34.2122 29.3281 39.0299 29.3281 45.2148C29.3281 50.4232 31.737 54.7852 36.5547 58.3008C41.3724 61.7513 49.3151 65.1367 60.3828 68.457C71.4505 71.7122 80.3372 75.4557 87.043 79.6875C93.7487 83.8542 98.6641 88.6719 101.789 94.1406C104.914 99.5443 106.477 105.892 106.477 113.184C106.477 125.033 101.919 134.473 92.8047 141.504C83.7552 148.47 71.4505 151.953 55.8906 151.953C45.6042 151.953 36.1315 150.065 27.4727 146.289C18.8789 142.448 12.1732 137.174 7.35547 130.469C2.60286 123.763 0.226562 115.951 0.226562 107.031H24.9336C24.9336 115.104 27.6029 121.354 32.9414 125.781C38.2799 130.208 45.9297 132.422 55.8906 132.422C64.4844 132.422 70.9297 130.697 75.2266 127.246C79.5885 123.73 81.7695 119.108 81.7695 113.379Z",
  "M160.188 104.688L149.641 115.527V150H125.91V0H149.641V86.5234L157.062 77.2461L186.262 44.3359H214.777L175.52 88.3789L218.977 150H191.535L160.188 104.688Z",
  "M293.488 150C292.447 147.982 291.535 144.694 290.754 140.137C283.202 148.014 273.957 151.953 263.02 151.953C252.408 151.953 243.749 148.926 237.043 142.871C230.337 136.816 226.984 129.329 226.984 120.41C226.984 109.147 231.151 100.521 239.484 94.5312C247.883 88.4766 259.862 85.4492 275.422 85.4492H289.973V78.5156C289.973 73.0469 288.443 68.6849 285.383 65.4297C282.323 62.1094 277.668 60.4492 271.418 60.4492C266.014 60.4492 261.587 61.8164 258.137 64.5508C254.686 67.2201 252.961 70.638 252.961 74.8047H229.23C229.23 69.0104 231.151 63.6068 234.992 58.5938C238.833 53.5156 244.042 49.5443 250.617 46.6797C257.258 43.8151 264.647 42.3828 272.785 42.3828C285.155 42.3828 295.018 45.5078 302.375 51.7578C309.732 57.9427 313.508 66.6667 313.703 77.9297V125.586C313.703 135.091 315.038 142.676 317.707 148.34V150H293.488ZM267.414 132.91C272.102 132.91 276.496 131.771 280.598 129.492C284.764 127.214 287.889 124.154 289.973 120.312V100.391H277.18C268.391 100.391 261.783 101.921 257.355 104.98C252.928 108.04 250.715 112.37 250.715 117.969C250.715 122.526 252.212 126.172 255.207 128.906C258.267 131.576 262.336 132.91 267.414 132.91Z",
  "M360.578 44.3359L361.262 56.543C369.074 47.1029 379.328 42.3828 392.023 42.3828C414.029 42.3828 425.227 54.9805 425.617 80.1758V150H401.887V81.543C401.887 74.8372 400.422 69.8893 397.492 66.6992C394.628 63.444 389.908 61.8164 383.332 61.8164C373.762 61.8164 366.633 66.1458 361.945 74.8047V150H338.215V44.3359H360.578Z",
  "M505.207 66.0156C502.082 65.4948 498.859 65.2344 495.539 65.2344C484.667 65.2344 477.342 69.401 473.566 77.7344V150H449.836V44.3359H472.492L473.078 56.1523C478.807 46.9727 486.75 42.3828 496.906 42.3828C500.292 42.3828 503.091 42.8385 505.305 43.75L505.207 66.0156Z",
];



const SvgAnimation = () => {
  // animation driver
  
  const progress = useSharedValue(0);
  useEffect(() => {
    progress.value = withTiming(1, {
      duration: 3000,
      easing: Easing.linear,
    });
  }, [progress]);
  return (
    <View
      style={[
        tw("flex-1"),
        { flex: 1, justifyContent: "center", alignItems: "center" },
      ]}
    >
      <Svg
        width={width}
        height={height}
        viewBox={[0, 0, vWidth, vHeight].join(" ")}
      >
        {paths.map((d, key) => (
          <AnimatedStroke progress={progress} d={d} key={key} />
        ))}
      </Svg>
    </View>
  );
};

export default SvgAnimation;
